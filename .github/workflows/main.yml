# This is a basic workflow to help you get started with Actions

name: Payment_Service_CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Docker build
        run: docker build -t payment-service-dev .
          
      - name: Docker login
        run: docker login -u ${{secrets.DOCKER_LOGIN}} -p ${{secrets.DOCKER_TOKEN}}
          
      - name: Tag docker image
        run: docker tag payment-service-dev ${{secrets.DOCKER_LOGIN}}/payment-service
      
      - name: Push docker image
        run: docker push ${{secrets.DOCKER_LOGIN}}/payment-service
        
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
          creds: ${{secrets.AZURE_CREDENTIALS}}
          # Resource Group Name
          resource-group: AKS_CTSE_RG
          # AKS Cluster Name
          cluster-name: Ctse_Kube_Cluster
          
      - name: Create secret in Kubernetes cluster
        uses: Azure/k8s-create-secret@v1
        with:
          container-registry-url: https://index.docker.io/v1/
          # Container registry username
          container-registry-username: ${{secrets.DOCKER_LOGIN}}
          # Container registry password
          container-registry-password: ${{secrets.DOCKER_TOKEN}}
          # Type of Kubernetes secret. For example, docker-registry or generic
          secret-type: docker-registry
          # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
          secret-name: docker-image-pull-secret
